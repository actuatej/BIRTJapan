<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 3.7.2.v20130129-1905 Build &lt;3.7.2.v20130129-1905></property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[reportContext.setParameterValue("pReportExecutableName", reportContext.getReportRunnable().getReportName());
monthlyContribution = params["pMonthlyContribution"].value;
returnpct = params["pInvestmentStyle"].value;
var lifeEventTypesAll = params["pLifeEventTypes"].value;
var lifeEventStatesAll = params["pLifeEventStates"].value;
var lifeEventNamesAll = params["pLifeEventNames"].value;
var lifeEventDatesAll = params["pLifeEventDates"].value;
var lifeEventAmountsAll = params["pLifeEventAmounts"].value;
lifeEventTypes = [];
if (lifeEventTypesAll != null)
	lifeEventTypes = lifeEventTypesAll.split(",");
lifeEventStates = [];
if (lifeEventStatesAll != null)
	lifeEventStates = lifeEventStatesAll.split(",");
lifeEventNames = [];
if (lifeEventNamesAll != null)
	lifeEventNames = lifeEventNamesAll.split(",");
lifeEventDates = [];
if (lifeEventDatesAll != null)
	lifeEventDates = lifeEventDatesAll.split(",");
lifeEventAmounts = [];
if (lifeEventAmountsAll != null)
	lifeEventAmounts = lifeEventAmountsAll.split(",");
lifeEventRecs = [];
for (var i = 0; i < lifeEventTypes.length; i++) {
	lifeEventRecs[i] = 0;
}
retirementAmountAchievedYearMonth = 0;
retirementAgeGoalAchieved = true;
retirementAmountAtAgeGoal = 0;
	]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <parameters>
        <scalar-parameter name="pUser" id="16">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">kennethpeterson</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pMonthlyContribution" id="104">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1000</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pInvestmentStyle" id="134">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">float</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">0.06</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventTypes" id="105">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1,2,1,2</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventStates" id="128">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1,1,0,1</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventNames" id="127">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">House in Palm Springs,Porsche,Cottage,Jen's Lexus</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventDates" id="106">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">201304,201503,201801,201009</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pLifeEventAmounts" id="107">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">300000,150000,250000,100000</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pReportExecutableName" id="407">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">C:\Work\Actuate Workspaces\Schwab\Roadmap.rptdesign</value>
            </simple-property-list>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="Data Source" id="17"/>
        <oda-data-source extensionID="org.eclipse.datatools.connectivity.oda.flatfile" name="Data Source CSV" id="371">
            <property name="HOME">C:\data</property>
            <property name="DELIMTYPE">COMMA</property>
            <property name="CHARSET">UTF-8</property>
            <property name="INCLCOLUMNNAME">YES</property>
            <property name="INCLTYPELINE">NO</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <script-data-set name="Data Set" id="18">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">birthyear</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">yearmonth</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">totalnetworth</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">retirementage</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">retirementamt</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">projectednetworth</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">plotdate</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">lifeeventnote</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">birthyear</property>
                </structure>
                <structure>
                    <property name="columnName">yearmonth</property>
                </structure>
                <structure>
                    <property name="columnName">totalnetworth</property>
                </structure>
                <structure>
                    <property name="columnName">retirementage</property>
                </structure>
                <structure>
                    <property name="columnName">retirementamt</property>
                </structure>
                <structure>
                    <property name="columnName">projectednetworth</property>
                </structure>
                <structure>
                    <property name="columnName">plotdate</property>
                </structure>
                <structure>
                    <property name="columnName">lifeeventnote</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">birthyear</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">yearmonth</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">totalnetworth</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">retirementage</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">retirementamt</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">projectednetworth</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">plotdate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">lifeeventnote</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data Source</property>
            <method name="open"><![CDATA[curRow = 0;
overlapped = false;
deductamt = 0;

totalnetworth = data[totalBaseRows - 1][2];
retirementamt = data[totalBaseRows - 1][4];
birthyear = parseInt(data[totalBaseRows - 1][0], 10);
retirementage = parseInt(data[totalBaseRows - 1][3], 10);
retirementyear = birthyear + retirementage;

var yearmonth = new String(data[totalBaseRows - 1][1]);
year = parseInt(yearmonth.substring(0, 4), 10);
month = parseInt(yearmonth.substring(4, 6), 10);

recordsToRetAge = 0;
if (retirementyear > year) {
	if (month < 12)
		recordsToRetAge = 12 - month - 1;
	if (year + 1 < retirementyear)
		recordsToRetAge += (retirementyear - year - 1) * 12;
}

]]></method>
            <method name="fetch"><![CDATA[curRow++;
if (curRow > totalBaseRows) {
	if (curRow <= totalBaseRows + recordsToRetAge + 2 ||
			totalnetworth < retirementamt) {
			
		if (month == 12) { 
			month = 0;
			year++;
		}
		month++;		
		var yearmonth = (year * 100) + month;
		
		totalnetworth = totalnetworth + (totalnetworth * returnpct / 12) - deductamt + monthlyContribution;
		
		if (retirementAgeGoalAchieved &amp;&amp; curRow > totalBaseRows + recordsToRetAge + 2)
			retirementAgeGoalAchieved = false;
				
		if (retirementAmountAtAgeGoal == 0 &amp;&amp; curRow == totalBaseRows + recordsToRetAge + 2)
			retirementAmountAtAgeGoal = totalnetworth;
				
		if (retirementAmountAchievedYearMonth == 0 &amp;&amp; totalnetworth >= retirementamt)
			retirementAmountAchievedYearMonth = yearmonth;
				
		deductamt = 0;
		for (i = 0; i < lifeEventDates.length; i++) {
			if (lifeEventDates[i] == yearmonth &amp;&amp; lifeEventStates[i] == 1) {
				lifeEventRecs[i] = curRow;
				deductamt += lifeEventAmounts[i];			
				row["lifeeventnote"] = lifeEventNames[i] + " - $" + lifeEventAmounts[i];				
			}
		}		
		
		row["birthyear"] = data[totalBaseRows - 1][0];
		row["yearmonth"] = yearmonth;
		if (overlapped)
			row["totalnetworth"] = null;
		else
			row["totalnetworth"] = totalnetworth;
		row["retirementage"] = data[totalBaseRows - 1][3];			
		row["retirementamt"] = retirementamt;
		row["projectednetworth"] = totalnetworth;
		row["plotdate"] = new Date(year, month - 1, 1);
		overlapped = true;
		
		totalRecs = curRow;
		return true;
	} else {
		return false;
	}
} else {
	row["birthyear"] = data[curRow - 1][0];
	row["yearmonth"] = data[curRow - 1][1];
	row["totalnetworth"] = data[curRow - 1][2];
	row["retirementage"] = data[curRow - 1][3];
	row["retirementamt"] = data[curRow - 1][4];
	row["projectednetworth"] = null;
	row["plotdate"] = new Date(parseInt(new String(row["yearmonth"]).substring(0,4), 10), parseInt(new String(row["yearmonth"]).substring(4,6), 10) - 1, 1);

	totalRecs = curRow;
	return true;
}

]]></method>
            <method name="close"><![CDATA[reportContext.setPersistentGlobalVariable("allLifeEventStates", java.util.Arrays.asList(lifeEventStates));	
reportContext.setPersistentGlobalVariable("allLifeEventRecs", java.util.Arrays.asList(lifeEventRecs));	
reportContext.setPersistentGlobalVariable("allLifeEventTypes", java.util.Arrays.asList(lifeEventTypes));
reportContext.setPersistentGlobalVariable("retirementGoalAmount", "" + retirementamt);	
reportContext.setPersistentGlobalVariable("retirementGoalAge", "" + (totalBaseRows + recordsToRetAge));
reportContext.setPersistentGlobalVariable("retirementGoalAgeValue", "" + retirementage);
reportContext.setPersistentGlobalVariable("baseChartRows", "" + totalBaseRows);
reportContext.setPersistentGlobalVariable("totalChartRows", "" + totalRecs);	
reportContext.setPersistentGlobalVariable("retirementAmountAchievedYearMonthVar", "" + retirementAmountAchievedYearMonth);
]]></method>
        </script-data-set>
        <oda-data-set extensionID="org.eclipse.datatools.connectivity.oda.flatfile.dataSet" name="Data Set CSV" id="372">
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">BIRTH_YEAR</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">MNTH_END_YYYYMM</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">totalnetworth</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">retirementage</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">retirementamt</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <method name="beforeOpen"><![CDATA[curRow = 0;
data = [];]]></method>
            <method name="onFetch"><![CDATA[data[curRow] = [];
data[curRow][0] = row[1];
data[curRow][1] = row[2];
data[curRow][2] = row[3];
data[curRow][3] = row[4];
data[curRow][4] = row[5];
curRow++;
totalBaseRows = curRow;
reportContext.setPersistentGlobalVariable("varTotalBaseRows", "" + totalBaseRows);
]]></method>
            <property name="dataSource">Data Source CSV</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">BIRTH_YEAR</property>
                    <property name="nativeName">BIRTH_YEAR</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">MNTH_END_YYYYMM</property>
                    <property name="nativeName">MNTH_END_YYYYMM</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">totalnetworth</property>
                    <property name="nativeName">totalnetworth</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">retirementage</property>
                    <property name="nativeName">retirementage</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">retirementamt</property>
                    <property name="nativeName">retirementamt</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select "BIRTH_YEAR", "MNTH_END_YYYYMM", "totalnetworth", "retirementage", "retirementamt" from roadmap.csv : {"BIRTH_YEAR","BIRTH_YEAR",INT;"MNTH_END_YYYYMM","MNTH_END_YYYYMM",INT;"totalnetworth","totalnetworth",INT;"retirementage","retirementage",INT;"retirementamt","retirementamt",INT}]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>1.0</Version>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:name>BIRTH_YEAR</design:name>
            <design:position>1</design:position>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>-1</design:precision>
            <design:scale>-1</design:scale>
            <design:nullability>Unknown</design:nullability>
          </design:attributes>
          <design:usageHints>
            <design:label>BIRTH_YEAR</design:label>
            <design:formattingHints/>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:name>MNTH_END_YYYYMM</design:name>
            <design:position>2</design:position>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>-1</design:precision>
            <design:scale>-1</design:scale>
            <design:nullability>Unknown</design:nullability>
          </design:attributes>
          <design:usageHints>
            <design:label>MNTH_END_YYYYMM</design:label>
            <design:formattingHints/>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:name>totalnetworth</design:name>
            <design:position>3</design:position>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>-1</design:precision>
            <design:scale>-1</design:scale>
            <design:nullability>Unknown</design:nullability>
          </design:attributes>
          <design:usageHints>
            <design:label>totalnetworth</design:label>
            <design:formattingHints/>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:name>retirementage</design:name>
            <design:position>4</design:position>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>-1</design:precision>
            <design:scale>-1</design:scale>
            <design:nullability>Unknown</design:nullability>
          </design:attributes>
          <design:usageHints>
            <design:label>retirementage</design:label>
            <design:formattingHints/>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:name>retirementamt</design:name>
            <design:position>5</design:position>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>-1</design:precision>
            <design:scale>-1</design:scale>
            <design:nullability>Unknown</design:nullability>
          </design:attributes>
          <design:usageHints>
            <design:label>retirementamt</design:label>
            <design:formattingHints/>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">"Verdana"</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">custom</property>
            <property name="height">6.75in</property>
            <property name="width">9.5in</property>
            <property name="topMargin">0in</property>
            <property name="leftMargin">0in</property>
            <property name="bottomMargin">0in</property>
            <property name="rightMargin">0in</property>
            <property name="backgroundColor">#FFFFFF</property>
        </simple-master-page>
    </page-setup>
    <body>
        <table id="373">
            <property name="width">100%</property>
            <property name="dataSet">Data Set CSV</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr">true</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">BIRTH_YEAR</property>
                    <text-property name="displayName">BIRTH_YEAR</text-property>
                    <expression name="expression">dataSetRow["BIRTH_YEAR"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">MNTH_END_YYYYMM</property>
                    <text-property name="displayName">MNTH_END_YYYYMM</text-property>
                    <expression name="expression">dataSetRow["MNTH_END_YYYYMM"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">totalnetworth</property>
                    <text-property name="displayName">totalnetworth</text-property>
                    <expression name="expression">dataSetRow["totalnetworth"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">retirementage</property>
                    <text-property name="displayName">retirementage</text-property>
                    <expression name="expression">dataSetRow["retirementage"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">retirementamt</property>
                    <text-property name="displayName">retirementamt</text-property>
                    <expression name="expression">dataSetRow["retirementamt"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="402"/>
            <column id="403"/>
            <column id="404"/>
            <column id="405"/>
            <column id="406"/>
            <header>
                <row id="374">
                    <cell id="375">
                        <label id="376">
                            <text-property name="text">BIRTH_YEAR</text-property>
                        </label>
                    </cell>
                    <cell id="377">
                        <label id="378">
                            <text-property name="text">MNTH_END_YYYYMM</text-property>
                        </label>
                    </cell>
                    <cell id="379">
                        <label id="380">
                            <text-property name="text">totalnetworth</text-property>
                        </label>
                    </cell>
                    <cell id="381">
                        <label id="382">
                            <text-property name="text">retirementage</text-property>
                        </label>
                    </cell>
                    <cell id="383">
                        <label id="384">
                            <text-property name="text">retirementamt</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="385">
                    <cell id="386">
                        <data id="387">
                            <property name="resultSetColumn">BIRTH_YEAR</property>
                        </data>
                    </cell>
                    <cell id="388">
                        <data id="389">
                            <property name="resultSetColumn">MNTH_END_YYYYMM</property>
                        </data>
                    </cell>
                    <cell id="390">
                        <data id="391">
                            <property name="resultSetColumn">totalnetworth</property>
                        </data>
                    </cell>
                    <cell id="392">
                        <data id="393">
                            <property name="resultSetColumn">retirementage</property>
                        </data>
                    </cell>
                    <cell id="394">
                        <data id="395">
                            <property name="resultSetColumn">retirementamt</property>
                        </data>
                    </cell>
                </row>
            </detail>
        </table>
        <table id="319">
            <property name="width">100%</property>
            <property name="dataSet">Data Set</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">true</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">birthyear</property>
                    <text-property name="displayName">birthyear</text-property>
                    <expression name="expression" type="javascript">dataSetRow["birthyear"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">yearmonth</property>
                    <text-property name="displayName">yearmonth</text-property>
                    <expression name="expression" type="javascript">dataSetRow["yearmonth"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">totalnetworth</property>
                    <text-property name="displayName">totalnetworth</text-property>
                    <expression name="expression" type="javascript">dataSetRow["totalnetworth"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">retirementage</property>
                    <text-property name="displayName">retirementage</text-property>
                    <expression name="expression" type="javascript">dataSetRow["retirementage"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">retirementamt</property>
                    <text-property name="displayName">retirementamt</text-property>
                    <expression name="expression" type="javascript">dataSetRow["retirementamt"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">projectednetworth</property>
                    <text-property name="displayName">projectednetworth</text-property>
                    <expression name="expression" type="javascript">dataSetRow["projectednetworth"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">plotdate</property>
                    <text-property name="displayName">plotdate</text-property>
                    <expression name="expression" type="javascript">dataSetRow["plotdate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">lifeeventnote</property>
                    <text-property name="displayName">lifeeventnote</text-property>
                    <expression name="expression" type="javascript">dataSetRow["lifeeventnote"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <property name="pageBreakInterval">0</property>
            <column id="363"/>
            <column id="364"/>
            <column id="365"/>
            <column id="366"/>
            <column id="367"/>
            <column id="368"/>
            <column id="369"/>
            <column id="370"/>
            <header>
                <row id="320">
                    <cell id="321">
                        <label id="322">
                            <text-property name="text">birthyear</text-property>
                        </label>
                    </cell>
                    <cell id="323">
                        <label id="324">
                            <text-property name="text">yearmonth</text-property>
                        </label>
                    </cell>
                    <cell id="325">
                        <label id="326">
                            <text-property name="text">totalnetworth</text-property>
                        </label>
                    </cell>
                    <cell id="327">
                        <label id="328">
                            <text-property name="text">retirementage</text-property>
                        </label>
                    </cell>
                    <cell id="329">
                        <label id="330">
                            <text-property name="text">retirementamt</text-property>
                        </label>
                    </cell>
                    <cell id="331">
                        <label id="332">
                            <text-property name="text">projectednetworth</text-property>
                        </label>
                    </cell>
                    <cell id="333">
                        <label id="334">
                            <text-property name="text">plotdate</text-property>
                        </label>
                    </cell>
                    <cell id="335">
                        <label id="336">
                            <text-property name="text">lifeeventnote</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="337">
                    <cell id="338">
                        <data id="339">
                            <property name="resultSetColumn">birthyear</property>
                        </data>
                    </cell>
                    <cell id="340">
                        <data id="341">
                            <property name="resultSetColumn">yearmonth</property>
                        </data>
                    </cell>
                    <cell id="342">
                        <data id="343">
                            <property name="resultSetColumn">totalnetworth</property>
                        </data>
                    </cell>
                    <cell id="344">
                        <data id="345">
                            <property name="resultSetColumn">retirementage</property>
                        </data>
                    </cell>
                    <cell id="346">
                        <data id="347">
                            <property name="resultSetColumn">retirementamt</property>
                        </data>
                    </cell>
                    <cell id="348">
                        <data id="349">
                            <property name="resultSetColumn">projectednetworth</property>
                        </data>
                    </cell>
                    <cell id="350">
                        <data id="351">
                            <property name="resultSetColumn">plotdate</property>
                        </data>
                    </cell>
                    <cell id="352">
                        <data id="353">
                            <property name="resultSetColumn">lifeeventnote</property>
                        </data>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="354">
                    <cell id="355"/>
                    <cell id="356"/>
                    <cell id="357"/>
                    <cell id="358"/>
                    <cell id="359"/>
                    <cell id="360"/>
                    <cell id="361"/>
                    <cell id="362"/>
                </row>
            </footer>
        </table>
        <extended-item extensionName="Chart" name="RoadmapChart" id="108">
            <xml-property name="xmlRepresentation"><![CDATA[<ActuateChart version="2.5.3">
 <ChartWithAxes version="2.5.3" type="Area Chart" subType="Overlay" script="var markerIdx = 0;&#13;&#10;var lifeEventRecs;&#13;&#10;var lifeEventStates;&#13;&#10;var lifeEventTypes;&#13;&#10;&#13;&#10;function beforeDrawMarker(marker, dph, icsc) {&#13;&#10; importPackage(Packages.org.eclipse.birt.chart.model.attribute.impl);&#13;&#10; importPackage(Packages.org.eclipse.birt.chart.model.attribute);&#13;&#10; &#13;&#10; for (var i = 0; i &lt; lifeEventRecs.size(); i++) {&#13;&#10;  if (parseInt(lifeEventRecs.get(i), 10) == markerIdx &amp;&amp; parseInt(lifeEventStates.get(i), 10) == 1) {&#13;&#10;   var type = parseInt(lifeEventTypes.get(i), 10);&#13;&#10;   var file = &quot;file:///C:/Local/ws/ws_a11sp4demo/roadmap/images&quot;;&#13;&#10;   if (type == 1)&#13;&#10;    file += &quot;home.png&quot;;&#13;&#10;   else if (type == 2)&#13;&#10;    file += &quot;sports_car.png&quot;;&#13;&#10;   else if (type == 3)&#13;&#10;    file += &quot;graduate.png&quot;;&#13;&#10;   else if (type == 4)&#13;&#10;    file += &quot;church.png&quot;;&#13;&#10;   else if (type == 5)&#13;&#10;    file += &quot;palm_tree.png&quot;;&#13;&#10;   else if (type == 6)&#13;&#10;    file += &quot;moneybag_dollar.png&quot;;&#13;&#10;    &#13;&#10;   marker.setSize(16);&#13;&#10;   marker.setFill(ImageImpl.create(file));&#13;&#10;   marker.setVisible(true);   &#13;&#10;  }&#13;&#10; }&#13;&#10;  &#13;&#10; markerIdx++;&#13;&#10;}&#13;&#10;&#13;&#10;function beforeGeneration( chart, icsc )&#13;&#10;{&#13;&#10; importPackage(Packages.org.eclipse.birt.chart.model.component.impl);&#13;&#10; importPackage(Packages.org.eclipse.birt.chart.model.data.impl);&#13;&#10; importPackage(Packages.org.eclipse.birt.chart.model.attribute);&#13;&#10; importPackage(Packages.org.eclipse.birt.chart.model.attribute.impl);&#13;&#10;  &#13;&#10; var scriptable = icsc.getExternalContext().getScriptable();&#13;&#10; var investmentStyle = scriptable.getParameterValue(&quot;pInvestmentStyle&quot;);&#13;&#10; lifeEventRecs = scriptable.getPersistentGlobalVariable(&quot;allLifeEventRecs&quot;);&#13;&#10; lifeEventStates = scriptable.getPersistentGlobalVariable(&quot;allLifeEventStates&quot;);&#13;&#10; lifeEventTypes = scriptable.getPersistentGlobalVariable(&quot;allLifeEventTypes&quot;);&#13;&#10; var retAmt = scriptable.getPersistentGlobalVariable(&quot;retirementGoalAmount&quot;);&#13;&#10; var retAge = scriptable.getPersistentGlobalVariable(&quot;retirementGoalAge&quot;);&#13;&#10; var retAgeValue = scriptable.getPersistentGlobalVariable(&quot;retirementGoalAgeValue&quot;);&#13;&#10; var baseChartRows = scriptable.getPersistentGlobalVariable(&quot;baseChartRows&quot;);&#13;&#10; var totalChartRows = scriptable.getPersistentGlobalVariable(&quot;totalChartRows&quot;); &#13;&#10; &#13;&#10; var xAxis = icsc.getChartInstance().getBaseAxes()[0]; &#13;&#10; var yAxis = icsc.getChartInstance().getAxes().get(0).getAssociatedAxes().get(0);&#13;&#10;  &#13;&#10; var gradient = yAxis.getSeriesDefinitions().get(1).getSeriesPalette().getEntries().get(0);&#13;&#10; if (investmentStyle == 0.08)&#13;&#10;  gradient.setStartColor(ColorDefinitionImpl.create(255, 0, 0, 127));  &#13;&#10; else if (investmentStyle == 0.06)&#13;&#10;  gradient.setStartColor(ColorDefinitionImpl.create(255, 128, 0, 127));  &#13;&#10; else if (investmentStyle == 0.04)&#13;&#10;  gradient.setStartColor(ColorDefinitionImpl.create(154, 204, 0, 127));  &#13;&#10; else&#13;&#10;  gradient.setStartColor(ColorDefinitionImpl.create(0, 128, 0, 127));  &#13;&#10; &#13;&#10; var retGoalAmtLine = MarkerLineImpl.create(yAxis, NumberDataElementImpl.create(retAmt));&#13;&#10; retGoalAmtLine.getLineAttributes().setColor(ColorDefinitionImpl.create(175, 120, 23));&#13;&#10; retGoalAmtLine.getLineAttributes().setStyle(LineStyle.SOLID_LITERAL); &#13;&#10; retGoalAmtLine.getLabel().getCaption().setValue(&quot;Retirement Goal Amount&quot;);&#13;&#10; retGoalAmtLine.getLabel().getCaption().getFont().setSize(8);&#13;&#10; retGoalAmtLine.getLabel().getCaption().getFont().setBold(true);&#13;&#10; retGoalAmtLine.getLabel().getCaption().setColor(ColorDefinitionImpl.create(175, 120, 23));&#13;&#10; retGoalAmtLine.getTriggers().add(&#13;&#10;  TriggerImpl.create(TriggerCondition.ONMOUSEOVER_LITERAL, &#13;&#10;   ActionImpl.create(ActionType.SHOW_TOOLTIP_LITERAL, TooltipValueImpl.create(200, &quot;Amount: &quot; + retAmt))&#13;&#10;  )&#13;&#10; );&#13;&#10; &#13;&#10; var retGoalAgeLine = MarkerLineImpl.create(xAxis, NumberDataElementImpl.create(retAge));&#13;&#10; retGoalAgeLine.getLineAttributes().setColor(ColorDefinitionImpl.create(175, 120, 23));&#13;&#10; retGoalAgeLine.getLineAttributes().setStyle(LineStyle.SOLID_LITERAL); &#13;&#10; retGoalAgeLine.getLabel().getCaption().setValue(&quot;Retirement Goal Age&quot;);&#13;&#10; retGoalAgeLine.getLabel().getCaption().getFont().setSize(9);&#13;&#10; retGoalAgeLine.getLabel().getCaption().getFont().setBold(true);&#13;&#10; retGoalAgeLine.getLabel().getCaption().setColor(ColorDefinitionImpl.create(175, 120, 23)); &#13;&#10; retGoalAgeLine.setLabelAnchor(Anchor.EAST_LITERAL);&#13;&#10; retGoalAgeLine.getTriggers().add(&#13;&#10;  TriggerImpl.create(TriggerCondition.ONMOUSEOVER_LITERAL, &#13;&#10;   ActionImpl.create(ActionType.SHOW_TOOLTIP_LITERAL, TooltipValueImpl.create(200, &quot;Years: &quot; + retAgeValue))&#13;&#10;  )&#13;&#10; );&#13;&#10; &#13;&#10; var actualProjectedLine = MarkerLineImpl.create(xAxis, NumberDataElementImpl.create(baseChartRows));&#13;&#10; actualProjectedLine.getLineAttributes().setColor(ColorDefinitionImpl.GREY());&#13;&#10; actualProjectedLine.getLineAttributes().setStyle(LineStyle.DASHED_LITERAL); &#13;&#10; actualProjectedLine.getLabel().getCaption().setValue(&quot; &quot;); &#13;&#10; actualProjectedLine.getLineAttributes().setThickness(3);&#13;&#10;  &#13;&#10; var actualRange = MarkerRangeImpl.create(xAxis, NumberDataElementImpl.create(0), NumberDataElementImpl.create(baseChartRows), ColorDefinitionImpl.TRANSPARENT());&#13;&#10; actualRange.getLabel().getCaption().setValue(&quot;Actual&quot;);&#13;&#10; actualRange.getLabel().getCaption().getFont().setSize(9);&#13;&#10; actualRange.getLabel().getCaption().getFont().setBold(true);&#13;&#10; actualRange.getLabel().getCaption().setColor(ColorDefinitionImpl.GREY()); &#13;&#10; actualRange.setLabelAnchor(Anchor.NORTH_LITERAL);&#13;&#10;  &#13;&#10; var projectedRange = MarkerRangeImpl.create(xAxis, NumberDataElementImpl.create(baseChartRows), NumberDataElementImpl.create(totalChartRows), ColorDefinitionImpl.TRANSPARENT());&#13;&#10; projectedRange.getLabel().getCaption().setValue(&quot;Projected&quot;);&#13;&#10; projectedRange.getLabel().getCaption().getFont().setSize(9);&#13;&#10; projectedRange.getLabel().getCaption().getFont().setBold(true);&#13;&#10; projectedRange.getLabel().getCaption().setColor(ColorDefinitionImpl.GREY()); &#13;&#10; projectedRange.setLabelAnchor(Anchor.NORTH_LITERAL); &#13;&#10;}&#13;&#10;" units="Points">
  <block>
   <children _type="TitleBlock" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <label>
     <caption value="Area Chart Title">
      <font size="16.0" bold="true">
       <alignment _body="1,"/>
      </font>
     </caption>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
   </children>
   <children _type="Plot" stretch="2">
    <outline>
     <color _nil="1"/>
    </outline>
    <clientArea>
     <outline>
      <color _nil="1"/>
     </outline>
    </clientArea>
   </children>
   <children _type="Legend" visible="false">
    <outline>
     <color _nil="1"/>
    </outline>
    <clientArea>
     <outline>
      <color _nil="1"/>
     </outline>
    </clientArea>
    <text value=""/>
    <separator>
     <color _nil="1"/>
    </separator>
    <title>
     <caption value=""/>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
   </children>
   <bounds _body=",,684.0,306.0"/>
   <outline>
    <color _body=",,,,254"/>
   </outline>
   <background _body=",255,255,255,255"/>
  </block>
  <sampleData>
   <baseSampleData dataSetRepresentation="01/05/2000,02/01/2000,04/12/2000,03/12/2000,02/29/2000"/>
   <orthogonalSampleData dataSetRepresentation="6,4,12,8,10"/>
   <orthogonalSampleData dataSetRepresentation="42,91,62,9,21" seriesDefinitionIndex="1"/>
  </sampleData>
  <emptyMessage>
   <caption value="">
    <font>
     <alignment _body=",0"/>
    </font>
   </caption>
   <background _body=",0,255,255,255"/>
   <outline visible="false">
    <color _body=",255,0,0,0"/>
   </outline>
   <insets _body="0.0,2.0,0.0,3.0"/>
  </emptyMessage>
  <axes type="3">
   <title>
    <caption value="X-Axis Title">
     <font size="14.0" bold="true">
      <alignment _body="1,"/>
     </font>
    </caption>
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </title>
   <associatedAxes>
    <title>
     <caption value="Y-Axis Title">
      <font size="14.0" bold="true" rotation="90.0">
       <alignment _body="1,"/>
      </font>
     </caption>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </title>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _body=",,167,169,172"/>
      <entries _type="Gradient">
       <startColor _body=",127,254,0,0"/>
       <endColor _body=",127,0,128,0"/>
      </entries>
      <entries _body=",255,232,172,57"/>
      <entries _body=",255,128,255,128"/>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
     </seriesPalette>
     <series _type="AreaSeries" seriesIdentifier="Series 1" translucent="true" paletteLineColor="false">
      <label>
       <caption value=""/>
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="row[&quot;totalnetworth&quot;]"/>
      <dataPoint separator=", ">
       <components type="1"/>
      </dataPoint>
      <curveFitting _nil="1"/>
      <markers type="2" size="4" visible="false">
       <outline visible="false"/>
      </markers>
      <lineAttributes visible="false">
       <color _body=",,,,255"/>
      </lineAttributes>
     </series>
    </seriesDefinitions>
    <seriesDefinitions>
     <query definition=""/>
     <seriesPalette>
      <entries _type="Gradient">
       <startColor _body=",127,254,0,0"/>
       <endColor _body=",127,0,128,0"/>
      </entries>
      <entries _body=",255,232,172,57"/>
      <entries _body=",255,128,255,128"/>
      <entries _body=",255,64,128,128"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,170,85,85"/>
      <entries _body=",255,128,128,0"/>
      <entries _body=",255,192,192,192"/>
      <entries _body=",255,255,255,128"/>
      <entries _body=",255,128,192,128"/>
      <entries _body=",255,7,146,94"/>
      <entries _body=",255,0,128,255"/>
      <entries _body=",255,255,128,192"/>
      <entries _body=",255,0,255,255"/>
      <entries _body=",255,255,128,128"/>
      <entries _body=",255,0,128,192"/>
      <entries _body=",255,128,128,192"/>
      <entries _body=",255,255,0,255"/>
      <entries _body=",255,128,64,64"/>
      <entries _body=",255,255,128,64"/>
      <entries _body=",255,80,240,120"/>
      <entries _body=",255,0,64,128"/>
      <entries _body=",255,128,0,64"/>
      <entries _body=",255,255,0,128"/>
      <entries _body=",255,128,128,64"/>
      <entries _body=",255,128,128,128"/>
      <entries _body=",255,255,128,255"/>
      <entries _body=",255,0,64,0"/>
      <entries _body=",255,0,0,0"/>
      <entries _body=",255,255,255,255"/>
      <entries _body=",255,255,128,0"/>
      <entries _body=",,167,169,172"/>
     </seriesPalette>
     <series _type="AreaSeries" seriesIdentifier="Series 2" translucent="true" paletteLineColor="false">
      <label>
       <caption value=""/>
       <background _nil="1"/>
       <outline>
        <color _nil="1"/>
       </outline>
      </label>
      <dataDefinition definition="row[&quot;projectednetworth&quot;]"/>
      <dataPoint separator=", ">
       <components type="1"/>
      </dataPoint>
      <triggers condition="6">
       <action type="1">
        <value _type="TooltipValue" text="if (row[&quot;lifeeventnote&quot;] == null)&#13;&#10;&quot;&quot;;&#13;&#10;else&#13;&#10;row[&quot;lifeeventnote&quot;];" delay="200"/>
       </action>
      </triggers>
      <curveFitting _nil="1"/>
      <markers type="4" size="4" visible="false">
       <fill _type="Image" uRL="file:///C:\workspace\Schwab\images\home.png"/>
       <outline visible="false"/>
      </markers>
      <lineAttributes visible="false">
       <color _body=",,,,255"/>
      </lineAttributes>
     </series>
    </seriesDefinitions>
    <lineAttributes>
     <color _body=",,145,145,145"/>
    </lineAttributes>
    <label>
     <caption value="">
      <font size="8.0"/>
      <color _body=",255,145,145,145"/>
     </caption>
     <background _nil="1"/>
     <outline>
      <color _nil="1"/>
     </outline>
    </label>
    <formatSpecifier _type="JavaNumberFormatSpecifier" pattern="$ #,##0"/>
    <majorGrid>
     <lineAttributes>
      <color _nil="1"/>
     </lineAttributes>
     <tickAttributes>
      <color _nil="1"/>
     </tickAttributes>
    </majorGrid>
    <minorGrid>
     <lineAttributes>
      <color _nil="1"/>
     </lineAttributes>
     <tickAttributes>
      <color _nil="1"/>
     </tickAttributes>
    </minorGrid>
    <origin>
     <value _nil="1"/>
    </origin>
   </associatedAxes>
   <seriesDefinitions sorting="0">
    <query definition=""/>
    <seriesPalette>
     <entries _body=",,167,169,172"/>
     <entries _type="Gradient">
      <startColor _body=",127,254,0,0"/>
      <endColor _body=",127,0,128,0"/>
     </entries>
     <entries _body=",255,232,172,57"/>
     <entries _body=",255,128,255,128"/>
     <entries _body=",255,64,128,128"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,170,85,85"/>
     <entries _body=",255,128,128,0"/>
     <entries _body=",255,192,192,192"/>
     <entries _body=",255,255,255,128"/>
     <entries _body=",255,128,192,128"/>
     <entries _body=",255,7,146,94"/>
     <entries _body=",255,0,128,255"/>
     <entries _body=",255,255,128,192"/>
     <entries _body=",255,0,255,255"/>
     <entries _body=",255,255,128,128"/>
     <entries _body=",255,0,128,192"/>
     <entries _body=",255,128,128,192"/>
     <entries _body=",255,255,0,255"/>
     <entries _body=",255,128,64,64"/>
     <entries _body=",255,255,128,64"/>
     <entries _body=",255,80,240,120"/>
     <entries _body=",255,0,64,128"/>
     <entries _body=",255,128,0,64"/>
     <entries _body=",255,255,0,128"/>
     <entries _body=",255,128,128,64"/>
     <entries _body=",255,128,128,128"/>
     <entries _body=",255,255,128,255"/>
     <entries _body=",255,0,64,0"/>
     <entries _body=",255,0,0,0"/>
     <entries _body=",255,255,255,255"/>
     <entries _body=",255,255,128,0"/>
    </seriesPalette>
    <series seriesIdentifier="">
     <label>
      <caption value=""/>
      <background _nil="1"/>
      <outline>
       <color _nil="1"/>
      </outline>
     </label>
     <dataDefinition definition="row[&quot;plotdate&quot;]"/>
     <dataPoint separator=", ">
      <components type="1"/>
     </dataPoint>
     <curveFitting _nil="1"/>
    </series>
    <grouping enabled="true" groupingUnit="5" groupType="1"/>
    <sortKey definition="row[&quot;yearmonth&quot;]"/>
   </seriesDefinitions>
   <lineAttributes>
    <color _body=",,145,145,145"/>
   </lineAttributes>
   <label>
    <caption value="">
     <font size="8.0" rotation="45.0"/>
     <color _body=",255,145,145,145"/>
    </caption>
    <background _nil="1"/>
    <outline>
     <color _nil="1"/>
    </outline>
   </label>
   <formatSpecifier _type="JavaDateFormatSpecifier" pattern="MMM yyyy"/>
   <majorGrid>
    <lineAttributes>
     <color _nil="1"/>
    </lineAttributes>
    <tickAttributes visible="false">
     <color _nil="1"/>
    </tickAttributes>
   </majorGrid>
   <minorGrid>
    <lineAttributes>
     <color _nil="1"/>
    </lineAttributes>
    <tickAttributes>
     <color _nil="1"/>
    </tickAttributes>
   </minorGrid>
   <origin>
    <value _nil="1"/>
   </origin>
  </axes>
  <rotation>
   <angles/>
  </rotation>
 </ChartWithAxes>
</ActuateChart>
]]></xml-property>
            <property name="outputFormat">PNG</property>
            <property name="dataSet">Data Set</property>
            <property name="height">4.25in</property>
            <property name="width">9.5in</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">birthyear</property>
                    <expression name="expression">dataSetRow["birthyear"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">yearmonth</property>
                    <expression name="expression">dataSetRow["yearmonth"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">totalnetworth</property>
                    <expression name="expression">dataSetRow["totalnetworth"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">retirementage</property>
                    <expression name="expression">dataSetRow["retirementage"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">retirementamt</property>
                    <expression name="expression">dataSetRow["retirementamt"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">projectednetworth</property>
                    <expression name="expression">dataSetRow["projectednetworth"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">plotdate</property>
                    <expression name="expression">dataSetRow["plotdate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">lifeeventnote</property>
                    <expression name="expression">dataSetRow["lifeeventnote"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="130">
            <property name="marginLeft">81px</property>
            <property name="textAlign">left</property>
            <property name="width">100%</property>
            <column id="131"/>
            <row id="132">
                <cell id="133">
                    <property name="paddingLeft">5pt</property>
                    <text id="125">
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<script src="POC/Schwab/prototype.js" type="text/javascript"></script>

<script>
var user = "<VALUE-OF>params["pUser"].value</VALUE-OF>";
var monthlyContribution = "<VALUE-OF>params["pMonthlyContribution"].value</VALUE-OF>";
var investmentStyle = <VALUE-OF>params["pInvestmentStyle"].value</VALUE-OF>;
var lifeEventStates = "<VALUE-OF>params["pLifeEventStates"].value</VALUE-OF>".split(",");
var lifeEventNames = "<VALUE-OF>params["pLifeEventNames"].value</VALUE-OF>".split(",");
var lifeEventTypes = "<VALUE-OF>params["pLifeEventTypes"].value</VALUE-OF>".split(",");
var lifeEventDates = "<VALUE-OF>params["pLifeEventDates"].value</VALUE-OF>".split(",");
var lifeEventAmounts = "<VALUE-OF>params["pLifeEventAmounts"].value</VALUE-OF>".split(",");
var typeNames = ["House", "Car", "College", "Wedding", "Vacation", "Miscellaneous"];
var lifeEventEdit = -1;

function initialize() {
	$("investmentStyle").value = investmentStyle;
	displayLifeEvents();
}

function addLifeEvent() {
	var type = $("selAddLifeEvent").value;
	if (type == 0)
		return;

	var idx = lifeEventStates.length;
	lifeEventStates[idx] = 1;
	lifeEventNames[idx] = typeNames[type - 1] + " event";
	lifeEventTypes[idx] = type;
	lifeEventAmounts[idx] = 100000;
	lifeEventDates[idx] = "201410";

	displayLifeEvents();
	displayLifeEventEdit(idx);
	$("selAddLifeEvent").value = 0;
}

function displayLifeEvents() {
	updateLifeEvents();

	var html = "<table border='0'><tr>";
	for (var i = 0; i < lifeEventTypes.length; i++) {
		html += "<td valign='top'>"
		html += "<div id='lifeEventContainer" + i + "' style='width:240px; padding:3px; font-family:Arial; font-size:12px;'>";
		html += "<div id='lifeEvent" + i + "'>";
		html += "<input type='checkbox' id='lifeEventState" + i + "'";
		if (lifeEventStates[i] == 1)
			html += " checked ";
		html += "></input>";
		html += lifeEventNames[i];
		html += "<img title='Edit Event' style='margin-left:10px;' src='POC/Schwab/edit.png' onclick='displayLifeEventEdit(" + i + ")' />";
		html += "</div>";
		html += "</div>";
		html += "</td>";
		if ((i + 1) % 3 == 0)
			html += "</tr><tr>";
	}
	html += "</tr></table>";
	$("allLifeEventsContainer").update(html);
}

function displayLifeEventEdit(idx) {
	displayLifeEvents();
		
	var html = "";
	html += "<div id='lifeEvent" + idx + "' style='padding:2px; background-color:rgb(232,212,163); border: 1px solid #A09371'>";
	html += "<input type='checkbox' id='lifeEventState" + idx + "'";
	if (lifeEventStates[idx] == 1)
		html += " checked ";
	html += "></input>";
	html += "<input type='text' size='30' id='lifeEventName" + idx + "' style='border:1px solid #4f91cd' value=\"" + lifeEventNames[idx] + "\"></input>";
	html += "<table border='0' style='font-family:Arial; font-size:12px'>";
	html += "<tr><td>Amount $</td>";
	html += "<td><input type='text' size='10' sytle='border:1px solid #4f91cd' id='lifeEventAmount" + idx + "' value='" + lifeEventAmounts[idx] + "'></input></td></tr>";	
	html += "<tr><td>Date</td>";
	html += "<td><input type='text' size='10' sytle='border:1px solid #4f91cd' id='lifeEventDate" + idx + "' value='" + formatYearMonth(lifeEventDates[idx]) + "'></input></td></tr>";	
	html += "</table>"
	html += "</div>";
	
	$("lifeEventContainer" + idx).update(html);	
	lifeEventEdit = idx;
}

function updateLifeEvents() {
	if (lifeEventEdit != -1) {
		lifeEventStates[lifeEventEdit] = $("lifeEventState" + lifeEventEdit).checked ? 1 : 0;
		lifeEventNames[lifeEventEdit] = $("lifeEventName" + lifeEventEdit).value;
		lifeEventAmounts[lifeEventEdit] = $("lifeEventAmount" + lifeEventEdit).value;
		lifeEventDates[lifeEventEdit] = parseYearMonth($("lifeEventDate" + lifeEventEdit).value);		
		lifeEventEdit = -1;
	}
	for (var i = 0; i < lifeEventStates.length; i++) {
		var elem = $("lifeEventState" + i);
		if (elem)
			lifeEventStates[i] = elem.checked ? 1 : 0;
	}

}


function allocate() {
	displayLifeEvents();
	
	var url = "executereport.do?__executableName=";
	url += encodeURIComponent("<VALUE-OF>params["pReportExecutableName"].value</VALUE-OF>");
	url += "&amp;invokesubmit=true&amp;__format=html";
	url += "&amp;pUser=" + user;
	url += "&amp;pMonthlyContribution=" + encodeURIComponent($("monthlyContibution").value);
	url += "&amp;pInvestmentStyle=" + encodeURIComponent($("investmentStyle").value);
	url += "&amp;pLifeEventStates=" + encodeURIComponent(lifeEventStates.join(","));
	url += "&amp;pLifeEventTypes=" + encodeURIComponent(lifeEventTypes.join(","));
	url += "&amp;pLifeEventNames=" + encodeURIComponent(lifeEventNames.join(","));
	url += "&amp;pLifeEventAmounts=" + encodeURIComponent(lifeEventAmounts.join(","));
	url += "&amp;pLifeEventDates=" + encodeURIComponent(lifeEventDates.join(","));
	location.href = url;
}

function advice() {
	window.open("http://www.google.com/finance?hl=en&amp;tab=we", "adviceWindow", "width=700,height=600");
}

function formatYearMonth(raw) {
	return raw.substring(0, 4) + "-" + raw.substring(4, 6);
}

function parseYearMonth(formatted) {
	return (parseInt(formatted.substring(0, 4), 10) * 100) + parseInt(formatted.substring(5, 7), 10);
}
</script>]]></text-property>
                    </text>
                    <text id="126">
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<table width="750px" style="font-size:12px; font-family:Arial: border:0">
<tr>
<td align="left">
	<select id="selAddLifeEvent" onchange="addLifeEvent()" style="font-size:12px; font-family:Arial; border:1px solid #4F91CD">
		<option value="0">Add Life Event</option>
		<option value="1">House</option>
		<option value="2">Car</option>
		<option value="3">College</option>
		<option value="4">Wedding</option>
		<option value="5">Vacation</option>
		<option value="6">Miscellaneous</option>
	</select>
</td>
<td align="center">
	Monthly Contribution $<input type="text" size="5" id="monthlyContibution" name="monthlyContribution" style="font-size:12px; font-family:Arial; border:1px solid #4F91CD" value="<VALUE-OF>params["pMonthlyContribution"].value</VALUE-OF>"></input>
</td>
<td align="right">
	Investment Style
	<select id="investmentStyle" style="font-size:12px; font-family:Arial; border:1px solid #4F91CD">
		<option value="0.02">Conservative</option>
		<option value="0.04">Moderately Conversvative</option>
		<option value="0.06">Moderately Aggresive</option>
		<option value="0.08">Aggresive</option>
	</select>
</td>
</tr>
</table>]]></text-property>
                    </text>
                    <text id="129">
                        <property name="marginTop">0pt</property>
                        <property name="marginBottom">15px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div id="allLifeEventsContainer" style="font-family:Arial; font-size:12px; margin-top:10px; border:1px solid #4f91cd; width:750px; background-color:#E8F0F8"></div>
<div style="margin-top: 15px; text-align:center; width:750px">
	<button onclick="allocate()" style="font-size:12px; font-family:Arial; border:2px solid #4F91CD; padding:2px">Re-Allocate</button>
	&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
	<button onclick="advice()" style="font-size:12px; font-family:Arial; border:2px solid #4F91CD; padding:2px">Advice</button>
</div>

<script>
initialize();
</script>]]></text-property>
                    </text>
                    <text id="413">
                        <property name="marginTop">0pt</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr">true</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[You will acheive your retirement goal of $<VALUE-OF>retirementamt</VALUE-OF> at <VALUE-OF>retirementAmountAchievedYearMonth</VALUE-OF>]]></text-property>
                    </text>
                    <text id="414">
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr">(retirementAgeGoalAchieved == true)</expression>
                            </structure>
                        </list-property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[<div style="width:742px; border:1px solid red; color: red; padding:3px">
At the age of <VALUE-OF>retirementage</VALUE-OF> you will have <VALUE-OF format="$#,##0">retirementAmountAtAgeGoal</VALUE-OF>, which is less than your retirement goal of <VALUE-OF format="$#,##0">retirementamt</VALUE-OF>
<br />
With this plan, you will not attain your goal until <VALUE-OF format="MMMM yyyy">var yearmonthVal = new String(retirementAmountAchievedYearMonth);
var yearVal = parseInt(yearmonthVal.substring(0, 4), 10);
var monthVal = parseInt(yearmonthVal.substring(4, 6), 10);
new Date(yearVal, monthVal - 1, 1);</VALUE-OF>
<br /><br />
Please <a href="http://www.google.com/finance?hl=en&amp;tab=we" onclick="advice();return false;">Contact</a> your Financial Advisor to help you plan for and acheive your investment goals.
</div>


]]></text-property>
                    </text>
                </cell>
            </row>
        </grid>
    </body>
    <list-property name="images">
        <structure>
            <property name="name">img1.gif</property>
            <property name="data">
                R0lGODdhgAA6AOcAACwqLEyGtISCNKTOBMTGBMTGlOwGBISGjDxDRZSjpNTijITCjMTyBExMTsCq
xP
                ///3RWxP///5Si5MTp1AQl2STWDLSenMTO1JyytKTGtJSCzOTiGMTCRGxuBMTT1v///0TSLP//
/7TG
                zKSmBNTW1PzeBKzivISWnGx4fP///6y2hOT+BP///9TWBFRmZLzOzszg4iQm5MTa4eQ7PKyu
jP///3
                R2YLSeBExXVqy0tnS6hNzkZwwO7OTmO7TD7JWZnMTq3HSChKTaBNzKBAxCtKTssrC+xJSa
vNzq7K27
                vISGZNTgmby2zFxn5P///8TU66yudK3uvmRy5GRvb9xeZERPTpyrrAQvyTzaNLzClPzl
BNTWRP///3
                x+gAT9BLzK7HyG5KS27ISS4TQ4OJiYBJTORMTGMJyOjNSNkmRpa1ReYbzG5////4ya
3ISQkURKTP//
                /8j+BAwC8RziBNvKzBoa7MyuBNva3IyennR+giQO3Pv0BBTuBDQ27LS2utTp7HyL
jOQ2NLTqVERO5F
                zmZrzCbOTCXNzWhJyadNSmpLy6BOTeOHSaxLzCFNTmNNSenHfghLXExDww4KDm
rLS2BNTebMy+vtts
                bP///zTqNLy+NKSprNTSKP///6Su7Nb+BKSztOzuD7SeLNTixNTWJLS+55ye
IDw63OTWXOBGTMyytL
                jOBLzOtP///+zy9KTGJP////z+BLzmdPzsBNzOfPwCBLzS7Nzm7MzODLyy
1Gxe1JS6pNzeFOzqLLS2
                bDk+PSw+3Gx1dNTanIyKLIzKlE9SVP///4yK1An2BFxqbJSeoqy+9NSS
lNzO1NzeHHR2BKyuBLS+hJ
                yeBBTqBNTiuKzCxCQC3MzKLCwKzAQq1AQ2xKSur8TO7NxmZLzCrMza
4+zeLFSKvERGRpylptziiszW
                3NzW27TexIyXl9Ti5FRZXP///3yFhuTu7P///2Rm5MzW7Ky39IyV
4zw6PNyNkoySlNS6vPQCBAQC/N
                zf5LzJzHR5fBwC5NzaBFxjZLyaBCwAAAAAgAA6AAAI/gDbIRFI
cKDBgggPKhRoUGHDgg8jOkxIcaFF
                hhglQsyYcaKrP0j+gBxJEklIkSdDqkQ5UuXKly9BpoTZUibK
lDVxstwZ02XNnC1N3hzp6tZIoyKRJl
                16UqnTpSL/PN0pNerJqlSxYlWqFWlIo0Z1do2q9CpXpGU/
et16VOufb9+gfiX7J13Vb3bxVr0V1yxd
                GOnQ1v0GY2o6wlXtak0HI2lcrzDm3loJlq1gkUX3Gg38
FQnaW7dgIAC1L5I+fSI8pBNxQd8LfTkweP
                iGBJA/DwBkvPgWyQOCC+V26/PgodytSC+s7NMXKZ2+
wwjGufmmz0g96pGK7QMVKRIe0x66/vxJ0iUH
                nnIXEPyJRN3DchHpPBixCxpsWJCfpd7KvLQy3b1/
NHDLG3l0YUUaVYzjQhp5zKMOOrYl8QcoDVhRxT
                ddqCFOEm/88M0Y7Igjgj9WDMgOCuw0QGIxcVUR
oBsI/FAPjBdUUc8B7LyBAgJp4IHCH/sYIZI//iBg
                xQHB/CLCG+oc4AYOOETFVltufaTYWf9FBcMY
VnQBwxSgpPEGIOrgsM8vVbAThBoi3HICOvX8Eok/OP
                wCg4NJ4MBhOm6w80cVKKAQTDHFKJOMDDL8
kgA6aryRQDAuNADKGxOioE4yv0yBhwvpGJFHDi8kk8YY
                m6BwJhK/iONGEDhMYddV/lK6pZQrJvk0
2WQ2gVZrrYBcMFNY9wlVkklhuSTULThE5plUwi47mVC16q
                cSaMzi5yy0SAXRRTpf6aorftISS2tN
a821UlU4UWYTZTHdZxW6Pb1a0k/zmsvSueqme29bVyGhFlRj
                iRTYf04pFjBUt1zJ0mVdNcWtVAaj
9fDBU1GcZcJJXdkOVkhMfJ9/YXn88FwBY/yTxP0B+G6/KD08Fc
                gACuafZHXFVFNmnSVVmX1NNfWx
fToD3a3OMtGsH9E7f3vr0UDv7LNmSFP7LdO4SlVUwoDtTHTGJCfc
                FFlaWwbx10d/Rd9WU8Hq1VND
iw2ywlRuZSUgGOClWl1RKWYw/t6xQixw3n9fubfASA1OOOB4h3Q233
                bpjTjffkNOUsR6F06rByck
4QESORRd9K5F32qsZ9DuGm3ppntOrE+go86s6akT+2zpnx8LOjVL5L5E
                PjJ9lFI6neOKL1DEr1tv
8cebO9NP6tIrPEnB0tvsSL3EYn0sSxDldVKgaNUx2WZFDHDkZZElL8rk6+
                0w2SWLL+t/HWdZ/fXC
JOU7S52jC735X5vdNUkLm5jD9Me8uHnFZed7l8q2tz1uVSIUocBFI6AQiXEY
                YRyc6Ec/yNCPAkSi
LpmBwQtAkwPOIK1s19Jf03yGlqexay9PAxe1clYtySitKdTYwQ56sINKFGsH/t
                brBy58EYw8PMoU
zxjBM6RhgxyYpCjpAAQoQJEOP6QjHl/wgQ++EA94dDEeT1jGGrj4hC+W8QtrWAY3
                4iEDNsaDG6XY
Ihjj8Y05riGNZfTiGbXIRS/qEYtrmOMfs1iKNbbRi9xYhhzzOMcskIITGzDDFubIjW
                iQYgPX2AAN
nuCJL4SBA7i4Bi80AYUjyOAPH8FcAl7wh/xJSSmGixVXXtm3Wo7vllkyGKxsWTiBkeN6
                seiBlIB4
vR0YbH7Wqx9mTse5cAnrWfjhWa685Rmeya4+qwML6WQ4Q9uVTpq3+lbrlgDMHoiOmNarRL
                SQGQth
fGVcK9lG1WQ4LJ7wS4HC/gIgrPTVrOXZc3gh8UEdBlqHGOxFAeV0CTpjsQNhsbN+IfmXfvL3
                sv0d
DWBrqejMprSYyalMbSxJhw/wQVJ88EAxSPjl9YQpsIXuQCnszJ7VpAKDxrSSY1gR2Ule5bKaIa
                w/
cNuKyPxTLbn0FEClKKlJsYLQlWrTpVh5aFWKAgM8WKEcVQwMOJdlk9eBq6j1YZpMtMksshbrhNYE
                
q9aSWlIeSI2cTmXWQn2Iq4e+ky8JSII+btE9LKUsbF0hqlBTZjGwoLRgbanM99hKUh7sRaXWY6lR

                XApTYEIUlZLbBlQmtjeDUe5vh/MpABn3Ml2CVnKetUo6GLvUqDQ1smSh/mxUpLpMY+VAnMSylupS
Nz
                vPQTO3t5AHPuQw3FNIy7fLqlWxTKcrn4y0rVKDbDDPCcyXCiWm4nrJLTrH1Z4BZZ7N68nC/tAG
pfaB
                JfIYhHoHIYZ+EhCgIzGCUh0LFrhGdiXoJEAhjrOea8RiFqFoZ1QkKpXuBUyA7vseRs2XMZAI
t6R9oE
                86mqDUJpgsfE2Rhxg0LI/H/IG1bo2KdCX7hx5crx8CGEca2AGIYYyAEmQggxLYERiqJiAB
zbFiFCYQ
                hR37GAg+5nEUgMzjIk/iyEWYRBGI3GMeA/nJUWAEBbLBA20AY8k7DgcFKHAFHgQAykJ2
8pB3fIVscJ
                kHxCAy/jG23GUiMFkWn/jECuLgiCALQs5xWEUZMqCDXRDjFQNgwCqEoIIFAAGVSIAB
OhJgBM6dLVrQ
                HGsNQcIHL1jaC+fY5gxlYpcHk/S8QqFwSS2cEqnhhLgl/cJIntvYgya0KpRFionp
N9WEMSYk27CXxJ
                5Graog49KY9thRRuZpfJzXa6ImqYUTODaQpAPVJBXBskCMlhGjS7ZGoe1+aKlZ
v9LytHWZBrBNIBLe
                gTZ+fyh2hKOSbHw0waO2hDY+fFAVECfGvsEUGBKgOlvLDpiZt60WrkS3LmZW
+tKZ9ibr1O2Sd1RYeM
                A1nbzXIBRqV2XEs3PpONIxjj84A5hLyG5L/rZrPHt1tVy/Rvg9Y6JucLWb
1CKBhMxlnumo8ECpIqgK
                q5caFnyzNCQuTcCMTmAKMkiDEoqwQff8FRorWAEvJaSDOZrRjDvQIR9X
p8MdmkGHrnfdHFk3RwXmwI
                c5IMMbWJ96M8COdaxbXQP84Icc+CEJOqRD6rqQuzXwAQG3NwMEcyD7
HIjRDKw3wxpyl7sD3O6AxMsB
                G26nAy20oIVZlAAcYUdF5UuwB0P4QRU/OIMo/mGHIfwDERbgnZVW
+cHOmeMO6bhDPpqRDtqbIx8kCE
                Qtdl8LNNj+DhXgAzKmcfba5+MOsjdHOm5v+2MMd+6SIMHs86EL
OcwdH7rIh/LN/oEFPgh/GsSA/et5
                YH1+4IMJ2k9HLsqPDz3UfvmHmMUs9jCLRSi/8KiYvxb2QIv3
mwMc9LcHWiAMtLcfoYEck1FCUjNyKj
                EDvFcL9NASKecFyGAC87Q9c9FyuOJwo9ZcmQBskNAOzzJx
3HIL1PYVrzVdclVdVYNdIHE1+CM2DeaA
                vIcGcyFuKhc2DNRy+vFyJvOBlzYJEiZv0iYSIDYwt4Bx
ECNbISFVERUrwLNg+vYHNLh7aPA3OGhp5J
                ZTCpRu5pU3L4cVQGhpkKAU8kZvCWNvUeFzVsFvIkFb
iAYszQRx0oQEVQiBLjGBmGZqzCUV6qZNPqgS
                Y+gFQigTN1dS/hQXUPMVXeVEXcUETdjlGbQCA1Pk
ATdVNdBiE3d4hSqRhZjWVSwTEi0nFByobMIziJ
                AQLUQoFPLVVtDChiPBhCXmb094C1aQBBiQDyXU
FXBzhxE4Ep5IbibzMYrBg9zig1ExiIVYF2dYb/Ml
                JSM2F7NmPS/Vb9ezBGDxEd+AAc1xiX/ADKkQ
jqlAD2eziVLiiecgWuUjEjxoFD74Kqi4EkTojG2FhC
                nIUtwCVUgBh0WBLcFzC5fwgFTAVb5oEtyi
h+cATZPhMtSigaARiFKhjGdziCS1BrhCbWBxj80Va1Ix
                jdiTjRd2U1IRkLxHBduzia9yC+i4OB+T
FBooFT6I/hSoeB9KhQ85ZxT2hhTWBmssSD20iFmTo1l2QZ
                K7RwUk4YvnOG55Yw+WwJSWYDLG+Adh
mIwgaFjNmIbPKDA+VzhuOIu0VluRkAS0cVueQZS1MJDPgpRC
                cXCWlmmgQQf3wHsGAC1/KBMxGRLK
WDQUiQ+J+Ac751ZgEY0yEWtNCHIiBwqvcRjpwC2JcAnd8JiPgG
                708JiPaQ/xgwSEkJmZOQEYQwKU
eQmX4Gx/sAxNUJpNAAZjIwGm2QQSgDFIAAmaSQgWyG6rWQ414wGr
                KQUL+Qc5pEM7QA5jswS+uQPU
gG7kMJyjED9qUQ0SghQ5MEWg8JzPGZ3QCZ3TmQRTtA1T/pQD2kmd1V
                md2Fmd0wkK4bmd1nme2fmd
6jme6hme7DlF5cme7ymdoNAmVgIwewNLXCMljSFYkPMU/cls7kNTUthT
                gmFTU1IYUrISCjpegvM1
jUErttM0UoNb+mFqUBNWC1ih09I0FzppHHpRC1hNVCM0A1dDAwdxMWSAdA
                EWSbANVvAH4zCjSbEN
M/oNbpADFDWjVnBB46APiuMG+jAOOWAF9QAWFZQA32CjP5AURYoOSJAANGoU
                27AJP+AB9aCjKDEO
B7ANFaQMHgAaMOAG4+AHSTAO9ZAYVqoPVmCldXEL8rEJf6AMm9BxRnFV44ClOd
                CcQLkZUlKk41BB
oCAktHZhBdKRBG7QG1Exo8owowZWF2R6AOOgnVGRBHm1CVYQnVGRA+jADvqQADkg
                JCLRnaCQqJYo
EuPADlI6Do+Ko+iwDQmAAa4ko+hgqM8ZFR4ACoGqDNyxqPpQD9uQqHEBQioKNAYqLI
                FBH2bzpuji
p2ZBLeYWM/p2JQPXM7XSOBjoGa/iXRjzMdvUbJHWUyohofvSL9GjOvfiXcAVFCOHXF6R
                XKX2XvBa
QC4BLO1aciejrv4SEAA7

            </property>
        </structure>
    </list-property>
</report>
